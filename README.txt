Milestone 1: https://www.youtube.com/watch?v=VI6Wz9TMFQs

Procedural Terrain (Zhiyuan Liang)
To achieve the realistic terrian effect. I tried different combinations of noise and tuned the parameters and seeds. I tested the noise effect in HW5 post-process shader.
The noise I tried:
1. FBM only
2. Worley Noise only
3. Perlin Noise only (including summed-perlin, recursive perlin)
4. FBM warped by FBM/Worley/Perlin
5. Worley warped by FBM/Worley/Perlin
6. Perlin warped by FBM/Worley/Perlin
7. Simplex Noise only (including summed-perlin)
8. Simplex Noise warped by FBM/Worley/Perlin

After tuning the parameter, I found the Simplex noise with Perlin noise warp had the best effect.

I also designed the API for the additional biomes for milestone 3.
I also implemented part of multi-thread of milestone 2 because I can not stand with the torture of slow rendering speed.

Game Engine Tick Function and Player Physics (Ruifan Wang)
    - Jumping
        - to avoid click space before it lands, I had to add another global variable to inputs to store whether it is on ground or not
        - to avoid holding space and flying up, I added a condition that checks if I am on ground or not before jumping
    - Collision detection
        - intially I implemented the way that the player's movement will come to a complete halt when it collides
        - eventually I did the same thing but one axis at the time to allow smoother collision such as walking along the wall
    - Placing block
        - intially I made it that it could place a block only if the space was empty, but I had hard time placing blocks this way
        - then I realized that I should check if gridMarch returns true, and then players wouldn't be able to place block in the air
    - Velocity and acceleration
        - just the overall tuning of the velocity and acceleration is definitely a pain in the butt

Efficient Terrain Rendering and Chunking (Zongxin Cui)
    - Chunk Class
        - reorganize the basic element of the terrian from blocks to chunks, which is a 16x16x256 block bundle. 
        - I also change the VBO data into interleave style, eg:poscolnormposcolnorm, to speed up the transmission between CPU and GPU
        - organize the block information, eg: pos, uv, normal, collectively to improve future debugging
        - implemented specific render process for interleave VBO in shader program
    - Terrain Generation
        - terrain is now generated by zone unit, a 4x4 chunk bundle
        - a zone is only being generated if the player's position to current generated terrain edge is less than 16 blocks
